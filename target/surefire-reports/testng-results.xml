<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="20" passed="20">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="3447" started-at="2015-07-04T23:15:31Z" finished-at="2015-07-04T23:15:34Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="3447" started-at="2015-07-04T23:15:31Z" finished-at="2015-07-04T23:15:34Z">
      <class name="net.jodah.concurrentunit.internal.ReentrantCircuitTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="beforeMethod" is-config="true" duration-ms="7" started-at="2015-07-04T23:15:31Z" finished-at="2015-07-04T23:15:31Z">
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldHandleConcurrentWaiters()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="shouldHandleConcurrentWaiters" duration-ms="1007" started-at="2015-07-04T23:15:31Z" finished-at="2015-07-04T23:15:32Z">
        </test-method> <!-- shouldHandleConcurrentWaiters -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-07-04T23:15:32Z" finished-at="2015-07-04T23:15:32Z">
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldHandleOpenCloseCycles()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="shouldHandleOpenCloseCycles" duration-ms="1" started-at="2015-07-04T23:15:32Z" finished-at="2015-07-04T23:15:32Z">
        </test-method> <!-- shouldHandleOpenCloseCycles -->
        <test-method status="PASS" signature="shouldHandleRepeatedClosed()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="shouldHandleRepeatedClosed" duration-ms="0" started-at="2015-07-04T23:15:32Z" finished-at="2015-07-04T23:15:32Z">
        </test-method> <!-- shouldHandleRepeatedClosed -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-07-04T23:15:32Z" finished-at="2015-07-04T23:15:32Z">
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldHandleRepeatedOpens()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="shouldHandleRepeatedOpens" duration-ms="0" started-at="2015-07-04T23:15:32Z" finished-at="2015-07-04T23:15:32Z">
        </test-method> <!-- shouldHandleRepeatedOpens -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-07-04T23:15:32Z" finished-at="2015-07-04T23:15:32Z">
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-07-04T23:15:32Z" finished-at="2015-07-04T23:15:32Z">
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldHandleSequentialWaiters()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="shouldHandleSequentialWaiters" duration-ms="506" started-at="2015-07-04T23:15:32Z" finished-at="2015-07-04T23:15:33Z">
        </test-method> <!-- shouldHandleSequentialWaiters -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2015-07-04T23:15:33Z" finished-at="2015-07-04T23:15:33Z">
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldInterruptWaiters()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="shouldInterruptWaiters" duration-ms="306" started-at="2015-07-04T23:15:33Z" finished-at="2015-07-04T23:15:33Z">
        </test-method> <!-- shouldInterruptWaiters -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-07-04T23:15:33Z" finished-at="2015-07-04T23:15:33Z">
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldInitiallyBeClosed()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="shouldInitiallyBeClosed" duration-ms="0" started-at="2015-07-04T23:15:33Z" finished-at="2015-07-04T23:15:33Z">
        </test-method> <!-- shouldInitiallyBeClosed -->
        <test-method status="PASS" signature="shouldNotBlockOpenWhenSyncAcquired()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="shouldNotBlockOpenWhenSyncAcquired" duration-ms="306" started-at="2015-07-04T23:15:33Z" finished-at="2015-07-04T23:15:33Z">
        </test-method> <!-- shouldNotBlockOpenWhenSyncAcquired -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-07-04T23:15:33Z" finished-at="2015-07-04T23:15:33Z">
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2015-07-04T23:15:33Z" finished-at="2015-07-04T23:15:33Z">
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldReturnWhenAwaitAndAlreadyClosed()[pri:0, instance:net.jodah.concurrentunit.internal.ReentrantCircuitTest@7b8d343a]" name="shouldReturnWhenAwaitAndAlreadyClosed" duration-ms="0" started-at="2015-07-04T23:15:33Z" finished-at="2015-07-04T23:15:33Z">
        </test-method> <!-- shouldReturnWhenAwaitAndAlreadyClosed -->
      </class> <!-- net.jodah.concurrentunit.internal.ReentrantCircuitTest -->
      <class name="net.jodah.concurrentunit.WaiterTest">
        <test-method status="PASS" signature="shouldFailNullAssertionFromWorkerThreadWithReason()[pri:0, instance:net.jodah.concurrentunit.WaiterTest@73600b34]" name="shouldFailNullAssertionFromWorkerThreadWithReason" duration-ms="254" started-at="2015-07-04T23:15:33Z" finished-at="2015-07-04T23:15:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<null> but was:<test>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<null> but was:<test>
	at net.jodah.concurrentunit.Waiter.fail(Waiter.java:182)
	at net.jodah.concurrentunit.Waiter.assertNull(Waiter.java:58)
	at net.jodah.concurrentunit.WaiterTest$7.run(WaiterTest.java:146)
	at java.lang.Thread.run(Thread.java:722)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
        </test-method> <!-- shouldFailNullAssertionFromWorkerThreadWithReason -->
        <test-method status="PASS" signature="shouldFailNullAssertionWithReason()[pri:0, instance:net.jodah.concurrentunit.WaiterTest@73600b34]" name="shouldFailNullAssertionWithReason" duration-ms="0" started-at="2015-07-04T23:15:33Z" finished-at="2015-07-04T23:15:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<null> but was:<test>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<null> but was:<test>
	at net.jodah.concurrentunit.Waiter.fail(Waiter.java:182)
	at net.jodah.concurrentunit.Waiter.assertNull(Waiter.java:58)
	at net.jodah.concurrentunit.WaiterTest.shouldFailNullAssertionWithReason(WaiterTest.java:136)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:702)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:894)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1219)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:768)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:87)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1188)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1113)
	at org.testng.TestNG.run(TestNG.java:1025)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
        </test-method> <!-- shouldFailNullAssertionWithReason -->
        <test-method status="PASS" signature="shouldSupportMultipleResumes()[pri:0, instance:net.jodah.concurrentunit.WaiterTest@73600b34]" name="shouldSupportMultipleResumes" duration-ms="254" started-at="2015-07-04T23:15:33Z" finished-at="2015-07-04T23:15:34Z">
        </test-method> <!-- shouldSupportMultipleResumes -->
        <test-method status="PASS" signature="shouldSupportMultipleThreads()[pri:0, instance:net.jodah.concurrentunit.WaiterTest@73600b34]" name="shouldSupportMultipleThreads" duration-ms="1" started-at="2015-07-04T23:15:34Z" finished-at="2015-07-04T23:15:34Z">
        </test-method> <!-- shouldSupportMultipleThreads -->
        <test-method status="PASS" signature="shouldSupportSuccessiveResumes()[pri:0, instance:net.jodah.concurrentunit.WaiterTest@73600b34]" name="shouldSupportSuccessiveResumes" duration-ms="0" started-at="2015-07-04T23:15:34Z" finished-at="2015-07-04T23:15:34Z">
        </test-method> <!-- shouldSupportSuccessiveResumes -->
        <test-method status="PASS" signature="shouldSupportThreadWait0WithResumeCount()[pri:0, instance:net.jodah.concurrentunit.WaiterTest@73600b34]" name="shouldSupportThreadWait0WithResumeCount" duration-ms="256" started-at="2015-07-04T23:15:34Z" finished-at="2015-07-04T23:15:34Z">
        </test-method> <!-- shouldSupportThreadWait0WithResumeCount -->
        <test-method status="PASS" signature="shouldThrowWhenResumingWithoutWait()[pri:0, instance:net.jodah.concurrentunit.WaiterTest@73600b34]" name="shouldThrowWhenResumingWithoutWait" duration-ms="0" started-at="2015-07-04T23:15:34Z" finished-at="2015-07-04T23:15:34Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The waiter is not expecting resume to be called]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The waiter is not expecting resume to be called
	at net.jodah.concurrentunit.Waiter.resume(Waiter.java:241)
	at net.jodah.concurrentunit.Waiter.resume(Waiter.java:221)
	at net.jodah.concurrentunit.WaiterTest.shouldThrowWhenResumingWithoutWait(WaiterTest.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:702)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:894)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1219)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:768)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:87)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1188)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1113)
	at org.testng.TestNG.run(TestNG.java:1025)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
        </test-method> <!-- shouldThrowWhenResumingWithoutWait -->
        <test-method status="PASS" signature="waitShouldSupportAssertionErrors()[pri:0, instance:net.jodah.concurrentunit.WaiterTest@73600b34]" name="waitShouldSupportAssertionErrors" duration-ms="256" started-at="2015-07-04T23:15:34Z" finished-at="2015-07-04T23:15:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected true]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected true
	at net.jodah.concurrentunit.Waiter.fail(Waiter.java:182)
	at net.jodah.concurrentunit.Waiter.assertTrue(Waiter.java:66)
	at net.jodah.concurrentunit.WaiterTest$4.run(WaiterTest.java:75)
	at java.lang.Thread.run(Thread.java:722)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
        </test-method> <!-- waitShouldSupportAssertionErrors -->
        <test-method status="PASS" signature="waitShouldSupportExceptions()[pri:0, instance:net.jodah.concurrentunit.WaiterTest@73600b34]" name="waitShouldSupportExceptions" duration-ms="1" started-at="2015-07-04T23:15:34Z" finished-at="2015-07-04T23:15:34Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at net.jodah.concurrentunit.WaiterTest$3.run(WaiterTest.java:55)
	at java.lang.Thread.run(Thread.java:722)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
        </test-method> <!-- waitShouldSupportExceptions -->
        <test-method status="PASS" signature="waitShouldSupportResume()[pri:0, instance:net.jodah.concurrentunit.WaiterTest@73600b34]" name="waitShouldSupportResume" duration-ms="256" started-at="2015-07-04T23:15:34Z" finished-at="2015-07-04T23:15:34Z">
        </test-method> <!-- waitShouldSupportResume -->
        <test-method status="PASS" signature="waitShouldSupportTimeouts()[pri:0, instance:net.jodah.concurrentunit.WaiterTest@73600b34]" name="waitShouldSupportTimeouts" duration-ms="13" started-at="2015-07-04T23:15:34Z" finished-at="2015-07-04T23:15:34Z">
          <exception class="java.util.concurrent.TimeoutException">
            <message>
              <![CDATA[Test timed out while waiting for an expected result]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.concurrent.TimeoutException: Test timed out while waiting for an expected result
	at net.jodah.concurrentunit.Waiter.await(Waiter.java:144)
	at net.jodah.concurrentunit.Waiter.await(Waiter.java:90)
	at net.jodah.concurrentunit.WaiterTest.waitShouldSupportTimeouts(WaiterTest.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:702)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:894)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1219)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:768)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:87)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1188)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1113)
	at org.testng.TestNG.run(TestNG.java:1025)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.concurrent.TimeoutException -->
        </test-method> <!-- waitShouldSupportTimeouts -->
      </class> <!-- net.jodah.concurrentunit.WaiterTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
